<?xml version="1.0" encoding="UTF-8"?>
<sequence name="VacantsCreatePOSTInSeq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log/>
    <!--     <property expression="hashicorp:vault-lookup('@vault.path/utilityManagement/vacantsCreateAPI/v1/vacants/create/POST',  'VacantsCreatePOSTEndpoint')" name="uri.var.url" scope="default" type="STRING"/> -->
    <property expression="fn:concat('Basic ', 'ZDk3MmYwYTctNDUyYS00ZmUzLTlkMjYtZTcyZTY2OTVmNDVmOjZhNTc2MWM0LTg1MjMtNGFlOC1iMDljLTkxNmU0OGM4ODQ0Ng==' )" name="fulltoken" scope="default" type="STRING"/>
    <header expression="get-property('fulltoken')" name="Authorization" scope="transport"/>
    <call>
        <endpoint key="VacantsCreateTokenPOSTEndpoint"/>
    </call>
    <property expression="json-eval($.access_token)" name="access_token" scope="default" type="STRING"/>
    <property expression="fn:concat('Bearer ', get-property('access_token') )" name="creencialesfull" scope="default" type="STRING"/>
    <header expression="get-property('creencialesfull')" name="Authorization" scope="transport"/>
    <call>
        <endpoint key="VacantsCreatePOSTEndpoint"/>
    </call>
    <filter regex="201" source="$axis2:HTTP_SC">
        <then>
            <log/>
            <payloadFactory media-type="json">
                <format>{&#xd;
    "MsgRsHdr": {&#xd;
        "error": null&#xd;
    },&#xd;
    "body": {&#xd;
        "results": $1&#xd;
    }&#xd;
}</format>
                <args>
                    <arg evaluator="json" expression="$"/>
                </args>
            </payloadFactory>
            <property description="Asignar HTTP Code 200" name="HTTP_SC" scope="axis2" type="INTEGER" value="200"/>
        </then>
        <else>
            <filter regex="429" source="$axis2:HTTP_SC">
                <then>
                    <log/>
                    <payloadFactory media-type="json">
                        <format>{&#xd;
        "MsgRsHdr": {&#xd;
            "error": {&#xd;
                "Status": {&#xd;
                    "StatusCode": 200,&#xd;
                    "Severity": null,&#xd;
                    "StatusDesc": "La consulta no está disponible por el momento, por favor intente más tarde",&#xd;
                    "AdditionalStatus": {&#xd;
                        "ServerStatusCode": 200,&#xd;
                        "Category": "Error de negocio",&#xd;
                        "StatusDesc": "$1"&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        "body": null&#xd;
    }</format>
                        <args>
                            <arg evaluator="json" expression="$.message"/>
                        </args>
                    </payloadFactory>
                    <property description="Asignar HTTP Code 200" name="HTTP_SC" scope="axis2" type="INTEGER" value="200"/>
                </then>
                <else>
                    <log/>
                    <payloadFactory media-type="json">
                        <format>{&#xd;
        "MsgRsHdr": {&#xd;
            "error": {&#xd;
                "Status": {&#xd;
                    "StatusCode": 200,&#xd;
                    "Severity": null,&#xd;
                    "StatusDesc": "La consulta no está disponible por el momento, por favor intente más tarde",&#xd;
                    "AdditionalStatus": {&#xd;
                        "ServerStatusCode": $1,&#xd;
                        "Category": "Error Técnico",&#xd;
                        "StatusDesc": "$2"&#xd;
                    }&#xd;
                }&#xd;
            }&#xd;
        },&#xd;
        "body": null&#xd;
    }</format>
                        <args>
                            <arg evaluator="xml" expression="$axis2:HTTP_SC"/>
                            <arg evaluator="json" expression="$.message"/>
                        </args>
                    </payloadFactory>
                    <property description="Asignar HTTP Code 200" name="HTTP_SC" scope="axis2" type="INTEGER" value="200"/>
                </else>
            </filter>
        </else>
    </filter>
    <log/>
    <respond/>
</sequence>
